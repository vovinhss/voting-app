name: CI/CD Pipeline for Voting App
on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

jobs:
  yaml-lint:
    name: YAML Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install yamllint
        run: pip install yamllint

      - name: Lint Kubernetes YAML files
        run: yamllint -c .config/yamllint.yaml k8s-specifications/

  python-lint:
    name: Python Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./vote

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pylint black isort

      - name: Check formatting with Black
        run: black --check --diff .

      - name: Check import sorting with isort
        run: isort --check-only --diff .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=89 --statistics --exclude=node_modules,migrations

      - name: Lint with pylint
        run: |
          pylint --disable=all --enable=C,E,F,W --max-line-length=89 --ignore=node_modules,migrations $(find . -name "*.py" -not -path "./node_modules/*" -not -path "./migrations/*")

  docker-lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Hadolint
        run: |
          curl -Lo hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/

      - name: Lint Dockerfiles
        run: |
          find . -name "Dockerfile" -type f -exec hadolint {} \;
